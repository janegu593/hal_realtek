##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.5.2] date: [Fri Nov 29 15:56:19 CST 2019]
##########################################################################################################################
# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
# 2019-02-01 - first version
# ------------------------------------------------
######################################
# target
######################################
TARGET = librtl87x2g_io
ENCRYPTION = 0
######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
#OPT = -Og
OPT = -O
#######################################
# paths
#######################################
# Build path
BUILD_DIR = build
BIN_DIR = bin
######################################
# source
######################################
# C sources
C_SOURCES =  \
../../../../adc/src/rtl87x2g/rtl87x2g_adc.c \
../../../../wdt/src/rtl87x2g/rtl87x2g_aon_wdt.c \
../../../../dma/src/rtl87x2g/rtl87x2g_gdma.c \
../../../../gpio/src/rtl87x2g/rtl87x2g_gpio.c \
../../../../i2c/src/rtl87x2g/rtl87x2g_i2c.c \
../../../../ir/src/rtl87x2g/rtl87x2g_ir.c \
../../../../keyscan/src/rtl87x2g/rtl87x2g_keyscan.c \
../../../../lpc/src/rtl87x2g/rtl87x2g_lpc.c \
../../../../spi/src/rtl87x2g/rtl87x2g_spi.c \
../../../../tim/src/rtl87x2g/rtl87x2g_tim.c \
../../../../uart/src/rtl87x2g/rtl87x2g_uart.c \
../../../../wdt/src/rtl87x2g/rtl87x2g_wdt.c \
../../../../adc/src/rtl87x2g/rtl87x2g_hradc.c \
../../../../tim/src/rtl87x2g/rtl87x2g_enh_tim.c \
# sources END
# ASM sources
ASM_SOURCES = 
#startup_rtl8762c_ARMCC.s
#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
OD = $(PREFIX)objdump
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -march=armv8.1-m.main+dsp+mve+fp
# fpu
FPU = 
# float-abi
FLOAT-ABI = -mfloat-abi=hard
#FLOAT-ABI = -mfloat-abi=softfp
# mcu
MCU = $(CPU) -mthumb  $(FLOAT-ABI)


# C includes


C_INCLUDES =  \
-I../../../../../../include/rtl87x2g/ \
-I../../../../../../include/rtl87x2g/cmsis/Core/Include \
-I../../../../../../include/rtl87x2g/nsc \
-I../../../../ \
-I../../../../adc/inc \
-I../../../../dma/inc \
-I../../../../gpio/inc \
-I../../../../i2c/inc \
-I../../../../ir/inc \
-I../../../../keyscan/inc \
-I../../../../lpc/inc \
-I../../../../spi/inc \
-I../../../../wdt/inc \
-I../../../../tim/inc \
-I../../../../uart/inc \
-I../../../../rcc/inc \

# includes END

#C_PRE_INCLUDES

PER_INCLUDE=  \
#PRE_INCLUDES END

#C_PER_DEFINE

PER_DEFINE=  \
-D BUILD_WITH_FTL=1 \
-D RTL87x2G \
-D CONFIG_SOC_SERIES_RTL87X2G \
#PER_DEFINE END

CFLAGS = $(MCU) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
# perinclude 
ifneq ($(PER_INCLUDE), )
CFLAGS +=  $(PER_INCLUDE)
endif
ifneq ($(PER_DEFINE), )
CFLAGS +=  $(PER_DEFINE)  
endif
# default action: build all
# default action: build all
.PHONY : all
all: $(TARGET).a
	-rm ../../../lib/rtl87x2g/gcc/$(TARGET).a
	CP $(TARGET).a    ../../../lib/rtl87x2g/gcc

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
#vpath %.c $(sort $(dir $(C_SOURCES)))
vpath %.c  $(dir $(C_SOURCES))
# list of ASM program objects

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS)  $< -o $@

$(TARGET).a: $(OBJECTS) Makefile
	ar -rv  $(TARGET).a $(OBJECTS)

$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
	-rm $(TARGET).a
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
